{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasni\\\\Desktop\\\\TWITTER CLONE\\\\MovieMadness\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Navbar from './Navbar/Navbar';\nimport Data from './DataComponent/Data';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [imageChange, setImageChange] = useState(1);\n  const [data, setData] = useState([]);\n  let time;\n\n  const Games = () => {\n    fetch(\"https://free-to-play-games-database.p.rapidapi.com/api/games\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"free-to-play-games-database.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"65217d46famsh752564dc48c9febp11127ejsnb5c21b7dccdf\"\n      }\n    }).then(rsp => rsp.json()).then(data => {\n      setData(data);\n    });\n  };\n\n  const timer = () => {\n    time = setInterval(() => {\n      imageChange < 6 ? setImageChange(prevImageChange => prevImageChange + 1) : setImageChange(0);\n    }, 10000);\n  };\n\n  console.log(imageChange);\n\n  if (imageChange === 7) {\n    setImageChange(1);\n  }\n\n  const Gamedata = data.map(Game => {\n    if (Game.id === imageChange) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Game.thumbnail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, Game.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  useEffect(() => {\n    Games();\n    timer();\n    return () => clearInterval(time);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: Gamedata,\n          className: \"Fro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PU+aN6RqGeiYQoOcQe9haP7vL+c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/nasni/Desktop/TWITTER CLONE/MovieMadness/src/App.js"],"names":["useState","useEffect","Navbar","Data","BrowserRouter","Router","Routes","Route","App","imageChange","setImageChange","data","setData","time","Games","fetch","then","rsp","json","timer","setInterval","prevImageChange","console","log","Gamedata","map","Game","id","thumbnail","clearInterval"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAiCC,MAAjC,EAAwCC,KAAxC,QAAqD,kBAArD;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAK,CAACC,WAAD,EAAaC,cAAb,IAA6BV,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAK,CAACW,IAAD,EAAMC,OAAN,IAAeZ,QAAQ,CAAC,EAAD,CAA5B;AACA,MAAIa,IAAJ;;AACA,QAAMC,KAAK,GAAC,MAAI;AACdC,IAAAA,KAAK,CAAC,8DAAD,EAAiE;AACpE,gBAAU,KAD0D;AAEpE,iBAAW;AACT,2BAAmB,4CADV;AAET,0BAAkB;AAFT;AAFyD,KAAjE,CAAL,CAOAC,IAPA,CAOKC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAPV,EAQAF,IARA,CAQKL,IAAI,IAAE;AACVC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAVA;AAWH,GAZC;;AAaF,QAAMQ,KAAK,GAAC,MAAI;AAChBN,IAAAA,IAAI,GAACO,WAAW,CAAC,MAAM;AAEpBX,MAAAA,WAAW,GAAC,CAAZ,GAAcC,cAAc,CAACW,eAAe,IAAEA,eAAe,GAAC,CAAlC,CAA5B,GAAiEX,cAAc,CAAC,CAAD,CAA/E;AAEF,KAJe,EAKZ,KALY,CAAhB;AAMC,GAPD;;AAQAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;;AACA,MAAGA,WAAW,KAAG,CAAjB,EAAmB;AACnBC,IAAAA,cAAc,CAAC,CAAD,CAAd;AACC;;AAIC,QAAMc,QAAQ,GAACb,IAAI,CAACc,GAAL,CAAUC,IAAD,IAAQ;AAC9B,QAAGA,IAAI,CAACC,EAAL,KAAUlB,WAAb,EAAyB;AACvB,0BACE;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEiB,IAAI,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA;AADF,SAAUF,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF,GARc,CAAf;AASF1B,EAAAA,SAAS,CAAC,MAAI;AACda,IAAAA,KAAK;AACLK,IAAAA,KAAK;AACL,WAAO,MAAIU,aAAa,CAAChB,IAAD,CAAxB;AACC,GAJQ,EAIP,EAJO,CAAT;AAME,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA,8BACK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADL,eAEQ,QAAC,MAAD;AAAA,+BACG,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAiB,UAAA,OAAO,EAAEW,QAA1B;AAAoC,UAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA3DQhB,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Navbar from './Navbar/Navbar';\nimport Data from './DataComponent/Data'; \nimport { BrowserRouter as Router,Routes,Route } from 'react-router-dom';\n\n\nfunction App() {\n  const[imageChange,setImageChange]=useState(1)\n  const[data,setData]=useState([])\n  let time;\n  const Games=()=>{\n    fetch(\"https://free-to-play-games-database.p.rapidapi.com/api/games\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"free-to-play-games-database.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"65217d46famsh752564dc48c9febp11127ejsnb5c21b7dccdf\"\n      }\n    })\n   .then(rsp=>rsp.json())\n   .then(data=>{\n     setData(data)\n   })\n}\nconst timer=()=>{\ntime=setInterval(() => {\n  \n   imageChange<6?setImageChange(prevImageChange=>prevImageChange+1):setImageChange(0)\n  \n}\n  , 10000)\n};\nconsole.log(imageChange)\nif(imageChange===7){\nsetImageChange(1)\n}\n \n\n \n  const Gamedata=data.map((Game)=>{\n    if(Game.id===imageChange){\n      return(\n        <div key={Game.id}>\n          <img src={Game.thumbnail}/>\n        </div>\n      )\n    }\n  })\nuseEffect(()=>{\nGames()\ntimer()\nreturn ()=>clearInterval(time)\n},[])\n\n  return (\n    <div className=\"App\">\n      <Router>\n           <Navbar/>\n              <Routes>\n                 <Route path=\"/\"  element={Gamedata} className=\"Fro\">\n                   \n                 </Route>\n              </Routes>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}