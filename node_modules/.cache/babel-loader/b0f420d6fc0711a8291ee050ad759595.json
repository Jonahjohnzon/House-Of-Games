{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nasni\\\\Desktop\\\\TWITTER CLONE\\\\MovieMadness\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Navbar from './Navbar/Navbar';\nimport \"./index.css\";\nimport Frontdata from './DataComponent/FRONTIMAGES/Frontdata';\nimport Data from './DataComponent/Data';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [background, setBackground] = useState({\n    backgroundColor: \"rgb(28,28,28)\"\n  });\n  const [frontgames, setFrontgames] = useState([]);\n\n  const Games = () => {\n    fetch(\"https://free-to-play-games-database.p.rapidapi.com/api/games\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"free-to-play-games-database.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"65217d46famsh752564dc48c9febp11127ejsnb5c21b7dccdf\"\n      }\n    }).then(rsp => rsp.json()).then(data => {\n      setData(data);\n      setFrontgames(() => {\n        return /*#__PURE__*/_jsxDEV(Frontdata, {\n          data: da\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 8\n        }, this);\n      });\n    });\n  };\n\n  const Gamedata = data.map(Game => {\n    if (Game.id < 10) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: Game.game_url,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundImage: `url(${Game.thumbnail})`\n            },\n            className: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 8\n        }, this)\n      }, Game.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  useEffect(() => {\n    Games();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: background,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mainImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 20\n            }, this), frontgames, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"FrontImage\",\n              children: Gamedata\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Aj7sz1jKIKKPS+KbLkfYJom7enI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/nasni/Desktop/TWITTER CLONE/MovieMadness/src/App.js"],"names":["useState","useEffect","Navbar","Frontdata","Data","BrowserRouter","Router","Routes","Route","Link","App","data","setData","background","setBackground","backgroundColor","frontgames","setFrontgames","Games","fetch","then","rsp","json","da","Gamedata","map","Game","id","game_url","backgroundImage","thumbnail"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAiCC,MAAjC,EAAwCC,KAAxC,EAA8CC,IAA9C,QAA0D,kBAA1D;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeZ,QAAQ,CAAC,EAAD,CAA5B;AACD,QAAK,CAACa,UAAD,EAAYC,aAAZ,IAA2Bd,QAAQ,CAAC;AAACe,IAAAA,eAAe,EAAC;AAAjB,GAAD,CAAxC;AACA,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA2BjB,QAAQ,CAAC,EAAD,CAAzC;;AACC,QAAMkB,KAAK,GAAC,MAAI;AACdC,IAAAA,KAAK,CAAC,8DAAD,EAAiE;AACpE,gBAAU,KAD0D;AAEpE,iBAAW;AACT,2BAAmB,4CADV;AAET,0BAAkB;AAFT;AAFyD,KAAjE,CAAL,CAOAC,IAPA,CAOKC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAPV,EAQAF,IARA,CAQKT,IAAI,IAAE;AACVC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAM,MAAAA,aAAa,CAAC,MAAI;AAClB,4BACE,QAAC,SAAD;AAAW,UAAA,IAAI,EAAEM;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADF;AAEE,OAHW,CAAb;AAKD,KAfA;AAgBH,GAjBC;;AAmBA,QAAMC,QAAQ,GAACb,IAAI,CAACc,GAAL,CAAUC,IAAD,IAAQ;AAC9B,QAAGA,IAAI,CAACC,EAAL,GAAQ,EAAX,EAAc;AACZ,0BACE;AAAA,+BAED;AAAG,UAAA,IAAI,EAAED,IAAI,CAACE,QAAd;AAAA,iCAAwB;AAAM,YAAA,KAAK,EAAE;AAACC,cAAAA,eAAe,EAAE,OAAMH,IAAI,CAACI,SAAU;AAAvC,aAAb;AAAyD,YAAA,SAAS,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA;AAFC,SAAWJ,IAAI,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;AACF,GAVc,CAAf;AAYF1B,EAAAA,SAAS,CAAC,MAAI;AACdiB,IAAAA,KAAK;AACJ,GAFQ,EAEP,EAFO,CAAT;AAKE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAsB,IAAA,KAAK,EAAEL,UAA7B;AAAA,2BACE,QAAC,MAAD;AAAA,8BACK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADL,eAEQ,QAAC,MAAD;AAAA,+BACG,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAiB,UAAA,OAAO,eACtB;AAAA,oCACA;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBADA,EAGCG,UAHD,eAIF;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,wBAA6BQ;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAJE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAzDQd,G;;KAAAA,G;AA2DT,eAAeA,GAAf","sourcesContent":["\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Navbar from './Navbar/Navbar';\nimport \"./index.css\"\nimport Frontdata from './DataComponent/FRONTIMAGES/Frontdata';\nimport Data from './DataComponent/Data'; \nimport { BrowserRouter as Router,Routes,Route,Link } from 'react-router-dom';\n\n\nfunction App() {\n  const[data,setData]=useState([])\n const[background,setBackground]=useState({backgroundColor:\"rgb(28,28,28)\"})\n const [frontgames,setFrontgames]=useState([])\n  const Games=()=>{\n    fetch(\"https://free-to-play-games-database.p.rapidapi.com/api/games\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"free-to-play-games-database.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"65217d46famsh752564dc48c9febp11127ejsnb5c21b7dccdf\"\n      }\n    })\n   .then(rsp=>rsp.json())\n   .then(data=>{\n     setData(data)\n     setFrontgames(()=>{ \n     return(\n       <Frontdata data={da}/>\n     )})\n    \n   })\n}\n \n  const Gamedata=data.map((Game)=>{\n    if(Game.id<10){\n      return(\n        <div  key={Game.id}>\n          \n       <a href={Game.game_url}><div  style={{backgroundImage:`url(${Game.thumbnail})`}} className=\"img\">\n        </div></a> \n        </div>\n      )\n    }\n  })\n\nuseEffect(()=>{\nGames()\n},[])\n\n\n  return (\n    <div className=\"App\"  style={background}>\n      <Router>\n           <Navbar/>\n              <Routes>\n                 <Route path=\"/\"  element={\n                   <div>\n                   <div className='mainImage'>\n                   </div>\n                   {frontgames}\n                 <div className='FrontImage'>{Gamedata}</div>\n                 </div>} /> \n       \n              </Routes>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}